name: CI/CD
on:
  # Run on all PRs targeting main
  pull_request:
    branches:
      - main
  # Run on pushes to main and tags
  push:
    branches:
      - main
    tags:
      - v*

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:21-jdk
    strategy:
      matrix:
        scala: [3.7.0]
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl gnupg git

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Install sbt
        run: |
          curl -L -o sbt.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-1.9.7.deb
          dpkg -i sbt.deb
          apt-get update
          apt-get install -f -y

      - name: Configure Git
        run: |
          git config --global --add safe.directory /github/workspace

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.GITEA_TOKEN }}
          github-server-url: ${{ vars.GIT_PROTOCOL }}://${{ vars.GIT_SERVER }}

      - name: Check formatting
        run: sbt ++${{ matrix.scala }}! scalafmtCheckAll

      - name: Run tests
        env:
          GIT_SERVER: ${{ vars.GIT_SERVER }}
          GIT_PROTOCOL: ${{ vars.GIT_PROTOCOL }}
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}
        run: sbt ++${{ matrix.scala }}! test

  publish:
    name: Publish
    needs: [test]
    # Only publish on main branch pushes or tag pushes (not on PRs)
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:21-jdk
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl gnupg git

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Install sbt
        run: |
          curl -L -o sbt.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-1.9.7.deb
          dpkg -i sbt.deb
          apt-get update
          apt-get install -f -y

      - name: Configure Git
        run: |
          git config --global --add safe.directory /github/workspace

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.GITEA_TOKEN }}
          github-server-url: ${{ vars.GIT_PROTOCOL }}://${{ vars.GIT_SERVER }}

      - name: Publish
        env:
          GIT_SERVER: ${{ vars.GIT_SERVER }}
          GIT_PROTOCOL: ${{ vars.GIT_PROTOCOL }}
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            sbt +publish
          else
            sbt "set every version := \"${GITHUB_REF#refs/tags/v}\"" +publish
          fi

  docs:
    name: Build and Deploy Docs
    needs: [test]
    # Only deploy docs on main branch pushes or tag pushes (not on PRs)
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:21-jdk
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl gnupg git

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Install sbt
        run: |
          curl -L -o sbt.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-1.9.7.deb
          dpkg -i sbt.deb
          apt-get update
          apt-get install -f -y

      - name: Configure Git
        run: |
          git config --global --add safe.directory /github/workspace

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.GITEA_TOKEN }}
          github-server-url: ${{ vars.GIT_PROTOCOL }}://${{ vars.GIT_SERVER }}

      - name: Build documentation
        env:
          GIT_SERVER: ${{ vars.GIT_SERVER }}
          GIT_PROTOCOL: ${{ vars.GIT_PROTOCOL }}
        run: |
          # Get version for docs
          VERSION=$(if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then echo "latest"; else echo "${GITHUB_REF#refs/tags/v}"; fi)
          echo "Building documentation for version: $VERSION"
          
          # Build the complete site
          sbt docs/generateSite
          
          # Set up deployment directories
          mkdir -p _site
          mkdir -p _javadoc
          
          # Copy documentation and API docs
          cp -r modules/docs/target/docs/site/* _site/
          cp -r modules/docs/target/mdoc/* _javadoc/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_javadoc'

      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4